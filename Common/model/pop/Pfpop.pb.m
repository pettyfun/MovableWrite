// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "Pfpop.pb.h"

@implementation PfpopRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [PfpopRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface PFPBPopPoint ()
@property Float32 x;
@property Float32 y;
@property Float64 createTime;
@property Float32 pressure;
@end

@implementation PFPBPopPoint

- (BOOL) hasX {
  return !!hasX_;
}
- (void) setHasX:(BOOL) value {
  hasX_ = !!value;
}
@synthesize x;
- (BOOL) hasY {
  return !!hasY_;
}
- (void) setHasY:(BOOL) value {
  hasY_ = !!value;
}
@synthesize y;
- (BOOL) hasCreateTime {
  return !!hasCreateTime_;
}
- (void) setHasCreateTime:(BOOL) value {
  hasCreateTime_ = !!value;
}
@synthesize createTime;
- (BOOL) hasPressure {
  return !!hasPressure_;
}
- (void) setHasPressure:(BOOL) value {
  hasPressure_ = !!value;
}
@synthesize pressure;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.x = 0;
    self.y = 0;
    self.createTime = 0;
    self.pressure = 0;
  }
  return self;
}
static PFPBPopPoint* defaultPFPBPopPointInstance = nil;
+ (void) initialize {
  if (self == [PFPBPopPoint class]) {
    defaultPFPBPopPointInstance = [[PFPBPopPoint alloc] init];
  }
}
+ (PFPBPopPoint*) defaultInstance {
  return defaultPFPBPopPointInstance;
}
- (PFPBPopPoint*) defaultInstance {
  return defaultPFPBPopPointInstance;
}
- (BOOL) isInitialized {
  if (!self.hasX) {
    return NO;
  }
  if (!self.hasY) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasX) {
    [output writeFloat:1 value:self.x];
  }
  if (self.hasY) {
    [output writeFloat:2 value:self.y];
  }
  if (self.hasCreateTime) {
    [output writeDouble:3 value:self.createTime];
  }
  if (self.hasPressure) {
    [output writeFloat:4 value:self.pressure];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasX) {
    size += computeFloatSize(1, self.x);
  }
  if (self.hasY) {
    size += computeFloatSize(2, self.y);
  }
  if (self.hasCreateTime) {
    size += computeDoubleSize(3, self.createTime);
  }
  if (self.hasPressure) {
    size += computeFloatSize(4, self.pressure);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PFPBPopPoint*) parseFromData:(NSData*) data {
  return (PFPBPopPoint*)[[[PFPBPopPoint builder] mergeFromData:data] build];
}
+ (PFPBPopPoint*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PFPBPopPoint*)[[[PFPBPopPoint builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PFPBPopPoint*) parseFromInputStream:(NSInputStream*) input {
  return (PFPBPopPoint*)[[[PFPBPopPoint builder] mergeFromInputStream:input] build];
}
+ (PFPBPopPoint*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PFPBPopPoint*)[[[PFPBPopPoint builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PFPBPopPoint*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PFPBPopPoint*)[[[PFPBPopPoint builder] mergeFromCodedInputStream:input] build];
}
+ (PFPBPopPoint*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PFPBPopPoint*)[[[PFPBPopPoint builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PFPBPopPoint_Builder*) builder {
  return [[[PFPBPopPoint_Builder alloc] init] autorelease];
}
+ (PFPBPopPoint_Builder*) builderWithPrototype:(PFPBPopPoint*) prototype {
  return [[PFPBPopPoint builder] mergeFrom:prototype];
}
- (PFPBPopPoint_Builder*) builder {
  return [PFPBPopPoint builder];
}
@end

@interface PFPBPopPoint_Builder()
@property (retain) PFPBPopPoint* result;
@end

@implementation PFPBPopPoint_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PFPBPopPoint alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PFPBPopPoint_Builder*) clear {
  self.result = [[[PFPBPopPoint alloc] init] autorelease];
  return self;
}
- (PFPBPopPoint_Builder*) clone {
  return [PFPBPopPoint builderWithPrototype:result];
}
- (PFPBPopPoint*) defaultInstance {
  return [PFPBPopPoint defaultInstance];
}
- (PFPBPopPoint*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PFPBPopPoint*) buildPartial {
  PFPBPopPoint* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PFPBPopPoint_Builder*) mergeFrom:(PFPBPopPoint*) other {
  if (other == [PFPBPopPoint defaultInstance]) {
    return self;
  }
  if (other.hasX) {
    [self setX:other.x];
  }
  if (other.hasY) {
    [self setY:other.y];
  }
  if (other.hasCreateTime) {
    [self setCreateTime:other.createTime];
  }
  if (other.hasPressure) {
    [self setPressure:other.pressure];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PFPBPopPoint_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PFPBPopPoint_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 13: {
        [self setX:[input readFloat]];
        break;
      }
      case 21: {
        [self setY:[input readFloat]];
        break;
      }
      case 25: {
        [self setCreateTime:[input readDouble]];
        break;
      }
      case 37: {
        [self setPressure:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasX {
  return result.hasX;
}
- (Float32) x {
  return result.x;
}
- (PFPBPopPoint_Builder*) setX:(Float32) value {
  result.hasX = YES;
  result.x = value;
  return self;
}
- (PFPBPopPoint_Builder*) clearX {
  result.hasX = NO;
  result.x = 0;
  return self;
}
- (BOOL) hasY {
  return result.hasY;
}
- (Float32) y {
  return result.y;
}
- (PFPBPopPoint_Builder*) setY:(Float32) value {
  result.hasY = YES;
  result.y = value;
  return self;
}
- (PFPBPopPoint_Builder*) clearY {
  result.hasY = NO;
  result.y = 0;
  return self;
}
- (BOOL) hasCreateTime {
  return result.hasCreateTime;
}
- (Float64) createTime {
  return result.createTime;
}
- (PFPBPopPoint_Builder*) setCreateTime:(Float64) value {
  result.hasCreateTime = YES;
  result.createTime = value;
  return self;
}
- (PFPBPopPoint_Builder*) clearCreateTime {
  result.hasCreateTime = NO;
  result.createTime = 0;
  return self;
}
- (BOOL) hasPressure {
  return result.hasPressure;
}
- (Float32) pressure {
  return result.pressure;
}
- (PFPBPopPoint_Builder*) setPressure:(Float32) value {
  result.hasPressure = YES;
  result.pressure = value;
  return self;
}
- (PFPBPopPoint_Builder*) clearPressure {
  result.hasPressure = NO;
  result.pressure = 0;
  return self;
}
@end

@interface PFPBPopStroke ()
@property (retain) PFPBPopPoint* offset;
@property (retain) NSMutableArray* mutablePointsList;
@property int32_t type;
@end

@implementation PFPBPopStroke

- (BOOL) hasOffset {
  return !!hasOffset_;
}
- (void) setHasOffset:(BOOL) value {
  hasOffset_ = !!value;
}
@synthesize offset;
@synthesize mutablePointsList;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (void) dealloc {
  self.offset = nil;
  self.mutablePointsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.offset = [PFPBPopPoint defaultInstance];
    self.type = 0;
  }
  return self;
}
static PFPBPopStroke* defaultPFPBPopStrokeInstance = nil;
+ (void) initialize {
  if (self == [PFPBPopStroke class]) {
    defaultPFPBPopStrokeInstance = [[PFPBPopStroke alloc] init];
  }
}
+ (PFPBPopStroke*) defaultInstance {
  return defaultPFPBPopStrokeInstance;
}
- (PFPBPopStroke*) defaultInstance {
  return defaultPFPBPopStrokeInstance;
}
- (NSArray*) pointsList {
  return mutablePointsList;
}
- (PFPBPopPoint*) pointsAtIndex:(int32_t) index {
  id value = [mutablePointsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasOffset) {
    return NO;
  }
  if (!self.hasType) {
    return NO;
  }
  if (!self.offset.isInitialized) {
    return NO;
  }
  for (PFPBPopPoint* element in self.pointsList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasOffset) {
    [output writeMessage:1 value:self.offset];
  }
  for (PFPBPopPoint* element in self.pointsList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasType) {
    [output writeInt32:3 value:self.type];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasOffset) {
    size += computeMessageSize(1, self.offset);
  }
  for (PFPBPopPoint* element in self.pointsList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasType) {
    size += computeInt32Size(3, self.type);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PFPBPopStroke*) parseFromData:(NSData*) data {
  return (PFPBPopStroke*)[[[PFPBPopStroke builder] mergeFromData:data] build];
}
+ (PFPBPopStroke*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PFPBPopStroke*)[[[PFPBPopStroke builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PFPBPopStroke*) parseFromInputStream:(NSInputStream*) input {
  return (PFPBPopStroke*)[[[PFPBPopStroke builder] mergeFromInputStream:input] build];
}
+ (PFPBPopStroke*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PFPBPopStroke*)[[[PFPBPopStroke builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PFPBPopStroke*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PFPBPopStroke*)[[[PFPBPopStroke builder] mergeFromCodedInputStream:input] build];
}
+ (PFPBPopStroke*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PFPBPopStroke*)[[[PFPBPopStroke builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PFPBPopStroke_Builder*) builder {
  return [[[PFPBPopStroke_Builder alloc] init] autorelease];
}
+ (PFPBPopStroke_Builder*) builderWithPrototype:(PFPBPopStroke*) prototype {
  return [[PFPBPopStroke builder] mergeFrom:prototype];
}
- (PFPBPopStroke_Builder*) builder {
  return [PFPBPopStroke builder];
}
@end

@interface PFPBPopStroke_Builder()
@property (retain) PFPBPopStroke* result;
@end

@implementation PFPBPopStroke_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PFPBPopStroke alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PFPBPopStroke_Builder*) clear {
  self.result = [[[PFPBPopStroke alloc] init] autorelease];
  return self;
}
- (PFPBPopStroke_Builder*) clone {
  return [PFPBPopStroke builderWithPrototype:result];
}
- (PFPBPopStroke*) defaultInstance {
  return [PFPBPopStroke defaultInstance];
}
- (PFPBPopStroke*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PFPBPopStroke*) buildPartial {
  PFPBPopStroke* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PFPBPopStroke_Builder*) mergeFrom:(PFPBPopStroke*) other {
  if (other == [PFPBPopStroke defaultInstance]) {
    return self;
  }
  if (other.hasOffset) {
    [self mergeOffset:other.offset];
  }
  if (other.mutablePointsList.count > 0) {
    if (result.mutablePointsList == nil) {
      result.mutablePointsList = [NSMutableArray array];
    }
    [result.mutablePointsList addObjectsFromArray:other.mutablePointsList];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PFPBPopStroke_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PFPBPopStroke_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PFPBPopPoint_Builder* subBuilder = [PFPBPopPoint builder];
        if (self.hasOffset) {
          [subBuilder mergeFrom:self.offset];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setOffset:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        PFPBPopPoint_Builder* subBuilder = [PFPBPopPoint builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPoints:[subBuilder buildPartial]];
        break;
      }
      case 24: {
        [self setType:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasOffset {
  return result.hasOffset;
}
- (PFPBPopPoint*) offset {
  return result.offset;
}
- (PFPBPopStroke_Builder*) setOffset:(PFPBPopPoint*) value {
  result.hasOffset = YES;
  result.offset = value;
  return self;
}
- (PFPBPopStroke_Builder*) setOffsetBuilder:(PFPBPopPoint_Builder*) builderForValue {
  return [self setOffset:[builderForValue build]];
}
- (PFPBPopStroke_Builder*) mergeOffset:(PFPBPopPoint*) value {
  if (result.hasOffset &&
      result.offset != [PFPBPopPoint defaultInstance]) {
    result.offset =
      [[[PFPBPopPoint builderWithPrototype:result.offset] mergeFrom:value] buildPartial];
  } else {
    result.offset = value;
  }
  result.hasOffset = YES;
  return self;
}
- (PFPBPopStroke_Builder*) clearOffset {
  result.hasOffset = NO;
  result.offset = [PFPBPopPoint defaultInstance];
  return self;
}
- (NSArray*) pointsList {
  if (result.mutablePointsList == nil) { return [NSArray array]; }
  return result.mutablePointsList;
}
- (PFPBPopPoint*) pointsAtIndex:(int32_t) index {
  return [result pointsAtIndex:index];
}
- (PFPBPopStroke_Builder*) replacePointsAtIndex:(int32_t) index with:(PFPBPopPoint*) value {
  [result.mutablePointsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (PFPBPopStroke_Builder*) addAllPoints:(NSArray*) values {
  if (result.mutablePointsList == nil) {
    result.mutablePointsList = [NSMutableArray array];
  }
  [result.mutablePointsList addObjectsFromArray:values];
  return self;
}
- (PFPBPopStroke_Builder*) clearPointsList {
  result.mutablePointsList = nil;
  return self;
}
- (PFPBPopStroke_Builder*) addPoints:(PFPBPopPoint*) value {
  if (result.mutablePointsList == nil) {
    result.mutablePointsList = [NSMutableArray array];
  }
  [result.mutablePointsList addObject:value];
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (int32_t) type {
  return result.type;
}
- (PFPBPopStroke_Builder*) setType:(int32_t) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (PFPBPopStroke_Builder*) clearType {
  result.hasType = NO;
  result.type = 0;
  return self;
}
@end

